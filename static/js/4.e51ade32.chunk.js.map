{"version":3,"sources":["components/common/CustomIcon/CustomIcon.js","components/bulkPrint/PrintNavBar/PrintNavBar.js","views/bulkPrint/BulkPrintPage.js"],"names":["CustomIcon","props","iconName","size","className","rest","src","process","alt","PrintNavBar","history","useHistory","handlePrint","AppBar","elevation","position","color","Toolbar","IconButton","disableRipple","aria-label","style","backgroundColor","onClick","route","push","pathname","Typography","variant","Button","BulkPrintPage","theme","useTheme","componentRef","useRef","useReactToPrint","content","current","useState","checked","setChecked","useMediaQuery","breakpoints","up","Background","fullHeight","Card","CardContent","BULK_INVOICE_LIST","map","item","FormGroup","FormControlLabel","control","Checkbox","find","c","invoiceNo","onChange","e","event","target","filter","x","label","ref","b","includes","length","Fragment","pageBreakBefore","Invoice"],"mappings":"+XAGMA,EAAa,SAAAC,GAAU,IACnBC,EAAuCD,EAAvCC,SAAUC,EAA6BF,EAA7BE,KAAMC,EAAuBH,EAAvBG,UAAcC,EADZ,YACqBJ,EADrB,iCAE1B,OACE,6CAAKG,UAAS,qBAAgBA,IAAiBC,GAA/C,aACE,qBACEC,IAAG,UAAKC,kBAAL,mBAAsCL,EAAtC,QACHE,UAAWD,GAAQ,KACnBK,IAAKN,Q,QCAPO,G,OAAc,SAAAR,GAClB,IAAMS,EAAUC,cACRC,EAAgBX,EAAhBW,YAMR,OACE,cAACC,EAAA,EAAD,CACEC,UAAW,EACXC,SAAS,QACTC,MAAM,cACNZ,UAAU,2BAJZ,SAME,eAACa,EAAA,EAAD,CAASb,UAAU,UAAnB,UACE,qBAAKA,UAAU,gBAAf,SACE,cAACc,EAAA,EAAD,CACEC,eAAa,EACbC,aAAW,QACXhB,UAAU,YACViB,MAAO,CAAEC,gBAAiB,eAC1BC,QAAS,kBAlBCC,EAkBiB,uBAjBnCd,EAAQe,KAAK,CAAEC,SAAUF,IADP,IAAAA,GAaZ,SAOE,cAAC,EAAD,CAAYtB,SAAS,mBAAmBC,KAAK,WAGjD,sBAAKC,UAAU,kBAAf,UACE,cAACuB,EAAA,EAAD,CAAYC,QAAQ,KAApB,qBACA,cAACC,EAAA,EAAD,CAAQD,QAAQ,YAAYL,QAASX,EAArC,6B,uBC+CKkB,UArEf,WACE,IAAMC,EAAQC,cACRC,EAAeC,mBACftB,EAAcuB,0BAAgB,CAClCC,QAAS,kBAAMH,EAAaI,WAJP,EAMOC,mBAAS,CAAC,OAAQ,OAAQ,SANjC,mBAMhBC,EANgB,KAMPC,EANO,KAmBvB,OAZkBC,YAAcV,EAAMW,YAAYC,GAAG,OAanD,qCACE,cAAC,EAAD,CAAa/B,YAAaA,IAC1B,eAACgC,EAAA,EAAD,CAAYC,YAAU,EAAC7B,MAAM,wBAA7B,UACE,qBAAKZ,UAAU,iBAAf,SACE,cAAC0C,EAAA,EAAD,CAAMlB,QAAQ,WAAWxB,UAAU,iBAAnC,SACE,cAAC2C,EAAA,EAAD,UACGC,IAAkBC,KAAI,SAAAC,GAAI,OACzB,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEtC,MAAM,UACNuB,UAAWA,EAAQgB,MAAK,SAAAC,GAAC,OAAIA,IAAMN,EAAKO,aACxCC,SAAU,SAAAC,GAAC,OAxBZC,EAwB4BD,EAxBrBF,EAwBwBP,EAAKO,eAvBnDG,EAAMC,OAAOtB,QAEfC,EAAW,GAAD,mBAAKD,GAAL,CAAckB,KAGxBjB,EAAWD,EAAQuB,QAAO,SAAAC,GAAC,OAAIA,IAAMN,OANrB,IAACG,EAAOH,KA2BVO,MAAK,kBAAad,EAAKO,cATXP,EAAKO,oBAgB7B,qBAAKrD,UAAU,kBAAkB6D,IAAKhC,EAAtC,SACGe,IAAkBc,QAAO,SAAAI,GAAC,OAAI3B,EAAQ4B,SAASD,EAAET,cAC/CW,OACDpB,IAAkBc,QAAO,SAAAI,GAAC,OAAI3B,EAAQ4B,SAASD,EAAET,cAAYR,KAC3D,SAAAC,GAAI,OACF,eAAC,IAAMmB,SAAP,WACE,qBAAKhD,MAAO,CAAEiD,gBAAiB,YAC/B,qBAAKlE,UAAU,eAAf,SACE,cAACmE,EAAA,EAAD,CAASrB,KAAMA,QAHEA,EAAKO,cAS9B,qBAAKrD,UAAU,oCAAf,SACE,cAACuB,EAAA,EAAD,CAAYC,QAAQ,QAAQxB,UAAU,gBAAtC","file":"static/js/4.e51ade32.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./CustomIcon.scss\";\r\n\r\nconst CustomIcon = props => {\r\n  const { iconName, size, className, ...rest } = props;\r\n  return (\r\n    <div className={`CustomIcon ${className}`} {...rest}>\r\n      <img\r\n        src={`${process.env.PUBLIC_URL}/images/${iconName}.png`}\r\n        className={size || \"md\"}\r\n        alt={iconName}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { CustomIcon };\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { CustomIcon } from \"components/common/CustomIcon/CustomIcon\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./PrintNavBar.scss\";\r\n\r\nconst PrintNavBar = props => {\r\n  const history = useHistory();\r\n  const { handlePrint } = props;\r\n\r\n  const handleNavTo = route => {\r\n    history.push({ pathname: route });\r\n  };\r\n\r\n  return (\r\n    <AppBar\r\n      elevation={0}\r\n      position=\"fixed\"\r\n      color=\"transparent\"\r\n      className=\"PrintNavBar box-shadow-1\"\r\n    >\r\n      <Toolbar className=\"toolbar\">\r\n        <div className=\"btn-container\">\r\n          <IconButton\r\n            disableRipple\r\n            aria-label=\"close\"\r\n            className=\"btn-close\"\r\n            style={{ backgroundColor: \"transparent\" }}\r\n            onClick={() => handleNavTo(\"/print-frontend\")}\r\n          >\r\n            <CustomIcon iconName=\"arrow-left-black\" size=\"sm\" />\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"title-container\">\r\n          <Typography variant=\"h5\">Invoice</Typography>\r\n          <Button variant=\"contained\" onClick={handlePrint}>\r\n            Print\r\n          </Button>\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport { PrintNavBar };\r\n","import React, { useState, useRef } from \"react\";\nimport { useReactToPrint } from \"react-to-print\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { Background } from \"components/common/Background/Background\";\nimport { PrintNavBar } from \"components/bulkPrint/PrintNavBar/PrintNavBar\";\nimport { Invoice } from \"components/common/Invoice/Invoice\";\nimport { BULK_INVOICE_LIST } from \"constants/constants\";\n\nimport \"./BulkPrintPage.scss\";\n\nfunction BulkPrintPage() {\n  const theme = useTheme();\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current\n  });\n  const [checked, setChecked] = useState([\"#111\", \"#222\", \"#333\"]);\n  const isLgAndUp = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n  const handleCheck = (event, invoiceNo) => {\n    if (event.target.checked) {\n      // push\n      setChecked([...checked, invoiceNo]);\n    } else {\n      // pop\n      setChecked(checked.filter(x => x !== invoiceNo));\n    }\n  };\n\n  return (\n    <>\n      <PrintNavBar handlePrint={handlePrint} />\n      <Background fullHeight color=\"BulkPrintPage grey100\">\n        <div className=\"left-container\">\n          <Card variant=\"outlined\" className=\"BulkImportCard\">\n            <CardContent>\n              {BULK_INVOICE_LIST.map(item => (\n                <FormGroup key={item.invoiceNo}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        color=\"primary\"\n                        checked={!!checked.find(c => c === item.invoiceNo)}\n                        onChange={e => handleCheck(e, item.invoiceNo)}\n                      />\n                    }\n                    label={`Invoice ${item.invoiceNo}`}\n                  />\n                </FormGroup>\n              ))}\n            </CardContent>\n          </Card>\n        </div>\n        <div className=\"right-container\" ref={componentRef}>\n          {BULK_INVOICE_LIST.filter(b => checked.includes(b.invoiceNo))\n            .length ? (\n            BULK_INVOICE_LIST.filter(b => checked.includes(b.invoiceNo)).map(\n              item => (\n                <React.Fragment key={item.invoiceNo}>\n                  <div style={{ pageBreakBefore: \"always\" }} />\n                  <div className=\"box-shadow-1\">\n                    <Invoice item={item} />\n                  </div>\n                </React.Fragment>\n              )\n            )\n          ) : (\n            <div className=\"no-content-container box-shadow-1\">\n              <Typography variant=\"body1\" className=\"label-no-more\">\n                Please select one or more invoice to print\n              </Typography>\n            </div>\n          )}\n        </div>\n      </Background>\n    </>\n  );\n}\n\nexport default BulkPrintPage;\n"],"sourceRoot":""}